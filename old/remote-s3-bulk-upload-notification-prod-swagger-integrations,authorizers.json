{
  "swagger": "2.0",
  "info": {
    "version": "2016-08-05T22:07:47Z",
    "title": "remote-s3-bulk-upload-notification"
  },
  "host": "6s6rc7bqxb.execute-api.us-east-1.amazonaws.com",
  "basePath": "/prod",
  "schemes": [
    "https"
  ],
  "paths": {
    "/batch/status/{file}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Timestamp": {
                "type": "string"
              },
              "Content-Type": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "404 response"
          }
        },
        "security": [
          {
            "sigv4": []
          },
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::766732214526:role/apigateway_batch-get-s3",
          "uri": "arn:aws:apigateway:us-east-1:s3:path/batch.fineo.io/ingest/{user}_{file}",
          "passthroughBehavior": "never",
          "responses": {
            "4\\d{2}": {
              "statusCode": "404"
            },
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
                "method.response.header.Timestamp": "integration.response.header.Date"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.user": "'context.identity.user'",
            "integration.request.path.file": "method.request.path.file"
          },
          "httpMethod": "HEAD",
          "type": "aws"
        }
      }
    },
    "/batch/upload/data/{file}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Length",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Content-MD5",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "BatchUploadContent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchUploadContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "sigv4": []
          },
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::766732214526:role/apigateway_batch-upload-data",
          "uri": "arn:aws:apigateway:us-east-1:s3:path/batch.fineo.io/ingest/{user}_{file}",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "\\d{3}": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.user": "'context.identity.apiKey'",
            "integration.request.path.file": "method.request.path.file",
            "integration.request.header.Content-MD5": "method.request.header.Content-MD5",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.header.Content-Length": "method.request.header.Content-Length"
          },
          "httpMethod": "PUT",
          "type": "aws"
        }
      }
    },
    "/batch/upload/file": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "batchUploadRemoteS3File",
            "required": true,
            "schema": {
              "$ref": "#/definitions/batchUploadRemoteS3File"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "sigv4": []
          },
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::766732214526:role/apigateway_batch-upload-file",
          "requestTemplates": {
            "application/json": "{ }"
          },
          "uri": "arn:aws:apigateway:us-east-1:sns:action/Publish",
          "passthroughBehavior": "never",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{ }"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.TopicArn": "'arn:aws:sns:us-east-1:766732214526:batch-ingest-files_remote'",
            "integration.request.querystring.Subject": "'context.identity.apiKey'",
            "integration.request.querystring.Message": "method.request.body.FilePath"
          },
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "FilePath",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "sigv4": []
          },
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::766732214526:role/apigateway_batch-upload-file",
          "uri": "arn:aws:apigateway:us-east-1:sns:action/Publish",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.TopicArn": "'arn:aws:sns:us-east-1:766732214526:batch-ingest-files_remote'",
            "integration.request.querystring.Subject": "'apikey'",
            "integration.request.querystring.Message": "method.request.querystring.FilePath"
          },
          "httpMethod": "POST",
          "type": "aws"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-api-key",
      "in": "header"
    },
    "sigv4": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "definitions": {
    "batchUploadRemoteS3File": {
      "type": "object",
      "properties": {
        "FilePath": {
          "type": "string"
        }
      }
    },
    "Empty": {
      "type": "object"
    },
    "BatchUploadContent": {
      "type": "array",
      "description": "JSON blob of multiple event to batch upload. Max size: 10MB",
      "items": {
        "type": "object",
        "properties": {
          "metrictype": {
            "type": "string"
          },
          "additionalProperties": {
            "type": "object",
            "properties": {
              "value": null,
              "key": {
                "type": "string"
              }
            }
          },
          "timestamp": {
            "type": "number",
            "minimum": 0
          }
        }
      }
    }
  }
}
