#!/usr/bin/env ruby

# include the "lib" directory
File.expand_path(File.join(__dir__, "..", "lib")).tap {|pwd|
  $LOAD_PATH.unshift(pwd) unless $LOAD_PATH.include?(pwd)
}

require 'ostruct'

APIS = ["stream", "batch", "read", "schema", "schema_internal", "meta"]

API_GROUPS ={
  "api" => OpenStruct.new(title: "fineo-api",
                             version: "v1",
                             host: "api.fineo.io",
                             req: ["stream", "batch", "schema", "meta"])
}

# Apis that should not be present in the external swagger docs
EXTERNAL_EXCLUDES = [
  "read",
  "schema-internal",
  "schema_internal"
]

require 'deep_merge'
require 'templating'
include Templating
current = File.dirname(__FILE__)
options = {
  :output => File.join(current, "..", ".."),
  :input =>  File.join(current, "..", "input")
}
parse(ARGV, options)
root = File.join(options[:input], "root.json")

# templating each api
unless options[:external]
  APIS.each{|api|
    puts "Templating internal apis: #{api}" if options[:verbose]
    template_api(api.to_sym, root, options)
  }
else
  puts "Templating external apis..." if options[:verbose]
  # only publish the externally visible APIs
  APIS.keep_if{|name| !EXTERNAL_EXCLUDES.include? name}

  # combined, for the documentation
  # override the common properties to something that makes sense
  API_GROUPS.each{|name, api|
      assignments = {"api" => api}
      template_batch(name, root, assignments, api.req, "swagger.json", options)
  }
end


